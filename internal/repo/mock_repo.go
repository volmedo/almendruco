// Code generated by mockery v1.1.2. DO NOT EDIT.

package repo

import mock "github.com/stretchr/testify/mock"

// MockRepo is an autogenerated mock type for the Repo type
type MockRepo struct {
	mock.Mock
}

// GetLastNotifiedMessage provides a mock function with given fields: userName
func (_m *MockRepo) GetLastNotifiedMessage(userName string) (uint64, error) {
	ret := _m.Called(userName)

	var r0 uint64
	if rf, ok := ret.Get(0).(func(string) uint64); ok {
		r0 = rf(userName)
	} else {
		r0 = ret.Get(0).(uint64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPassword provides a mock function with given fields: userName
func (_m *MockRepo) GetPassword(userName string) (string, error) {
	ret := _m.Called(userName)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(userName)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetLastNotifiedMessage provides a mock function with given fields: userName, id
func (_m *MockRepo) SetLastNotifiedMessage(userName string, id uint64) error {
	ret := _m.Called(userName, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, uint64) error); ok {
		r0 = rf(userName, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
